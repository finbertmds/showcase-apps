{
  "info": {
    "name": "Showcase Apps API",
    "description": "GraphQL API collection for Showcase Apps",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:4000",
      "type": "string"
    },
    {
      "key": "webUrl",
      "value": "http://localhost:3000",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Public Queries",
      "item": [
        {
          "name": "Get All Apps",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"query GetApps {\\n    apps {\\n      _id\\n      title\\n      slug\\n      shortDesc\\n      status\\n      visibility\\n      platforms\\n      languages\\n      tags\\n      viewCount\\n      likeCount\\n      createdAt\\n    }\\n  }\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/graphql",
              "host": ["{{baseUrl}}"],
              "path": ["graphql"]
            }
          }
        },
        {
          "name": "Get Apps with Filters",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"query GetApps($platforms: [String!], $tags: [String!], $status: String) {\\n    apps(platforms: $platforms, tags: $tags, status: $status) {\\n      _id\\n      title\\n      slug\\n      shortDesc\\n      status\\n      visibility\\n      platforms\\n      languages\\n      tags\\n      viewCount\\n      likeCount\\n      createdAt\\n    }\\n  }\",\n  \"variables\": {\n    \"platforms\": [\"web\", \"mobile\"],\n    \"tags\": [\"react\", \"nodejs\"],\n    \"status\": \"published\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/graphql",
              "host": ["{{baseUrl}}"],
              "path": ["graphql"]
            }
          }
        },
        {
          "name": "Get App by ID",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"query GetApp($id: String!) {\\n    app(id: $id) {\\n      _id\\n      title\\n      slug\\n      shortDesc\\n      longDesc\\n      status\\n      visibility\\n      releaseDate\\n      platforms\\n      languages\\n      tags\\n      website\\n      repository\\n      demoUrl\\n      downloadUrl\\n      appStoreUrl\\n      playStoreUrl\\n      viewCount\\n      likeCount\\n      createdAt\\n      updatedAt\\n    }\\n  }\",\n  \"variables\": {\n    \"id\": \"YOUR_APP_ID_HERE\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/graphql",
              "host": ["{{baseUrl}}"],
              "path": ["graphql"]
            }
          }
        },
        {
          "name": "Get App by Slug",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"query GetAppBySlug($slug: String!) {\\n    appBySlug(slug: $slug) {\\n      _id\\n      title\\n      slug\\n      shortDesc\\n      longDesc\\n      status\\n      visibility\\n      releaseDate\\n      platforms\\n      languages\\n      tags\\n      website\\n      repository\\n      demoUrl\\n      downloadUrl\\n      appStoreUrl\\n      playStoreUrl\\n      viewCount\\n      likeCount\\n      createdAt\\n      updatedAt\\n    }\\n  }\",\n  \"variables\": {\n    \"slug\": \"my-awesome-app\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/graphql",
              "host": ["{{baseUrl}}"],
              "path": ["graphql"]
            }
          }
        },
        {
          "name": "Get Timeline Apps",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"query GetTimelineApps($limit: Int, $offset: Int) {\\n    timelineApps(limit: $limit, offset: $offset) {\\n      _id\\n      title\\n      slug\\n      shortDesc\\n      status\\n      visibility\\n      platforms\\n      languages\\n      tags\\n      viewCount\\n      likeCount\\n      createdAt\\n    }\\n  }\",\n  \"variables\": {\n    \"limit\": 10,\n    \"offset\": 0\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/graphql",
              "host": ["{{baseUrl}}"],
              "path": ["graphql"]
            }
          }
        },
        {
          "name": "Get Timeline Events",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"query GetTimelineEvents($limit: Int, $offset: Int) {\\n    timelineEvents(limit: $limit, offset: $offset) {\\n      _id\\n      appId\\n      title\\n      description\\n      type\\n      date\\n      isPublic\\n      version\\n      url\\n      metadata\\n      createdBy\\n      createdAt\\n      updatedAt\\n    }\\n  }\",\n  \"variables\": {\n    \"limit\": 10,\n    \"offset\": 0\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/graphql",
              "host": ["{{baseUrl}}"],
              "path": ["graphql"]
            }
          }
        },
        {
          "name": "Get Timeline Events by App",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"query GetTimelineEventsByApp($appId: String!, $isPublic: Boolean) {\\n    timelineEventsByApp(appId: $appId, isPublic: $isPublic) {\\n      _id\\n      title\\n      description\\n      type\\n      date\\n      isPublic\\n      version\\n      url\\n      metadata\\n      createdBy\\n      createdAt\\n      updatedAt\\n    }\\n  }\",\n  \"variables\": {\n    \"appId\": \"YOUR_APP_ID_HERE\",\n    \"isPublic\": true\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/graphql",
              "host": ["{{baseUrl}}"],
              "path": ["graphql"]
            }
          }
        },
        {
          "name": "Get Media by App",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"query GetMediaByApp($appId: String!) {\\n    mediaByApp(appId: $appId) {\\n      _id\\n      type\\n      url\\n      filename\\n      originalName\\n      mimeType\\n      size\\n      width\\n      height\\n      order\\n      isActive\\n      meta\\n      uploadedBy\\n      createdAt\\n      updatedAt\\n    }\\n  }\",\n  \"variables\": {\n    \"appId\": \"YOUR_APP_ID_HERE\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/graphql",
              "host": ["{{baseUrl}}"],
              "path": ["graphql"]
            }
          }
        },
        {
          "name": "Get Organizations",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"query GetOrganizations {\\n    organizations {\\n      _id\\n      name\\n      slug\\n      description\\n      logo\\n      website\\n      isActive\\n      ownerId\\n      createdAt\\n      updatedAt\\n    }\\n  }\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/graphql",
              "host": ["{{baseUrl}}"],
              "path": ["graphql"]
            }
          }
        }
      ]
    },
    {
      "name": "Protected Queries (Require JWT)",
      "item": [
        {
          "name": "Get Current User (Me)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer YOUR_JWT_TOKEN_HERE"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"query GetMe {\\n    me {\\n      _id\\n      email\\n      name\\n      role\\n      organizationId\\n      isActive\\n      avatar\\n      lastLoginAt\\n      createdAt\\n      updatedAt\\n    }\\n  }\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/graphql",
              "host": ["{{baseUrl}}"],
              "path": ["graphql"]
            }
          }
        },
        {
          "name": "Get All Users (Admin Only)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer YOUR_JWT_TOKEN_HERE"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"query GetUsers {\\n    users {\\n      _id\\n      email\\n      name\\n      role\\n      organizationId\\n      isActive\\n      avatar\\n      lastLoginAt\\n      createdAt\\n      updatedAt\\n    }\\n  }\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/graphql",
              "host": ["{{baseUrl}}"],
              "path": ["graphql"]
            }
          }
        },
        {
          "name": "Get User by ID",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer YOUR_JWT_TOKEN_HERE"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"query GetUser($id: String!) {\\n    user(id: $id) {\\n      _id\\n      email\\n      name\\n      role\\n      organizationId\\n      isActive\\n      avatar\\n      lastLoginAt\\n      createdAt\\n      updatedAt\\n    }\\n  }\",\n  \"variables\": {\n    \"id\": \"YOUR_USER_ID_HERE\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/graphql",
              "host": ["{{baseUrl}}"],
              "path": ["graphql"]
            }
          }
        }
      ]
    },
    {
      "name": "Mutations (Require JWT)",
      "item": [
        {
          "name": "Create App",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer YOUR_JWT_TOKEN_HERE"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"mutation CreateApp($input: CreateAppInput!) {\\n    createApp(input: $input) {\\n      _id\\n      title\\n      slug\\n      shortDesc\\n      longDesc\\n      status\\n      visibility\\n      releaseDate\\n      platforms\\n      languages\\n      tags\\n      website\\n      repository\\n      demoUrl\\n      downloadUrl\\n      appStoreUrl\\n      playStoreUrl\\n      viewCount\\n      likeCount\\n      createdAt\\n      updatedAt\\n    }\\n  }\",\n  \"variables\": {\n    \"input\": {\n      \"title\": \"My Awesome App\",\n      \"slug\": \"my-awesome-app\",\n      \"shortDesc\": \"A short description of my app\",\n      \"longDesc\": \"A detailed description of my awesome application\",\n      \"visibility\": \"PUBLIC\",\n      \"platforms\": [\"WEB\", \"MOBILE\"],\n      \"languages\": [\"JavaScript\", \"TypeScript\"],\n      \"tags\": [\"react\", \"nodejs\", \"web\"],\n      \"website\": \"https://myapp.com\",\n      \"repository\": \"https://github.com/user/myapp\",\n      \"demoUrl\": \"https://demo.myapp.com\"\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/graphql",
              "host": ["{{baseUrl}}"],
              "path": ["graphql"]
            }
          }
        },
        {
          "name": "Update App",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer YOUR_JWT_TOKEN_HERE"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"mutation UpdateApp($id: String!, $input: UpdateAppInput!) {\\n    updateApp(id: $id, input: $input) {\\n      _id\\n      title\\n      slug\\n      shortDesc\\n      longDesc\\n      status\\n      visibility\\n      platforms\\n      languages\\n      tags\\n      website\\n      repository\\n      demoUrl\\n      downloadUrl\\n      appStoreUrl\\n      playStoreUrl\\n      viewCount\\n      likeCount\\n      createdAt\\n      updatedAt\\n    }\\n  }\",\n  \"variables\": {\n    \"id\": \"YOUR_APP_ID_HERE\",\n    \"input\": {\n      \"title\": \"Updated App Title\",\n      \"shortDesc\": \"Updated short description\",\n      \"tags\": [\"updated\", \"tags\"]\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/graphql",
              "host": ["{{baseUrl}}"],
              "path": ["graphql"]
            }
          }
        },
        {
          "name": "Delete App",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer YOUR_JWT_TOKEN_HERE"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"mutation RemoveApp($id: String!) {\\n    removeApp(id: $id)\\n  }\",\n  \"variables\": {\n    \"id\": \"YOUR_APP_ID_HERE\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/graphql",
              "host": ["{{baseUrl}}"],
              "path": ["graphql"]
            }
          }
        },
        {
          "name": "Create Timeline Event",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer YOUR_JWT_TOKEN_HERE"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"mutation CreateTimelineEvent($input: CreateTimelineEventInput!) {\\n    createTimelineEvent(input: $input) {\\n      _id\\n      appId\\n      title\\n      description\\n      type\\n      date\\n      isPublic\\n      version\\n      url\\n      metadata\\n      createdBy\\n      createdAt\\n      updatedAt\\n    }\\n  }\",\n  \"variables\": {\n    \"input\": {\n      \"appId\": \"YOUR_APP_ID_HERE\",\n      \"title\": \"New Release v1.0.0\",\n      \"description\": \"Major release with new features\",\n      \"type\": \"RELEASE\",\n      \"date\": \"2024-01-15T00:00:00Z\",\n      \"isPublic\": true,\n      \"version\": \"1.0.0\",\n      \"url\": \"https://github.com/user/app/releases/tag/v1.0.0\"\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/graphql",
              "host": ["{{baseUrl}}"],
              "path": ["graphql"]
            }
          }
        },
        {
          "name": "Upload Media",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer YOUR_JWT_TOKEN_HERE"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"mutation UploadMedia($input: CreateMediaInput!) {\\n    uploadMedia(input: $input) {\\n      _id\\n      appId\\n      type\\n      url\\n      filename\\n      originalName\\n      mimeType\\n      size\\n      width\\n      height\\n      order\\n      isActive\\n      meta\\n      uploadedBy\\n      createdAt\\n      updatedAt\\n    }\\n  }\",\n  \"variables\": {\n    \"input\": {\n      \"appId\": \"YOUR_APP_ID_HERE\",\n      \"type\": \"SCREENSHOT\",\n      \"order\": 1\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/graphql",
              "host": ["{{baseUrl}}"],
              "path": ["graphql"]
            }
          }
        },
        {
          "name": "Update User (Admin Only)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer YOUR_JWT_TOKEN_HERE"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"mutation UpdateUser($id: String!, $role: String, $isActive: Boolean) {\\n    updateUser(id: $id, role: $role, isActive: $isActive) {\\n      _id\\n      email\\n      name\\n      role\\n      organizationId\\n      isActive\\n      avatar\\n      lastLoginAt\\n      createdAt\\n      updatedAt\\n    }\\n  }\",\n  \"variables\": {\n    \"id\": \"YOUR_USER_ID_HERE\",\n    \"role\": \"developer\",\n    \"isActive\": true\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/graphql",
              "host": ["{{baseUrl}}"],
              "path": ["graphql"]
            }
          }
        }
      ]
    },
    {
      "name": "Public Mutations",
      "item": [
        {
          "name": "Increment App View",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"mutation IncrementAppView($id: String!) {\\n    incrementAppView(id: $id)\\n  }\",\n  \"variables\": {\n    \"id\": \"YOUR_APP_ID_HERE\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/graphql",
              "host": ["{{baseUrl}}"],
              "path": ["graphql"]
            }
          }
        },
        {
          "name": "Increment App Like",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"mutation IncrementAppLike($id: String!) {\\n    incrementAppLike(id: $id)\\n  }\",\n  \"variables\": {\n    \"id\": \"YOUR_APP_ID_HERE\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/graphql",
              "host": ["{{baseUrl}}"],
              "path": ["graphql"]
            }
          }
        },
        {
          "name": "Login with Clerk",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"mutation LoginWithClerk($clerkToken: String!) {\\n    loginWithClerk(clerkToken: $clerkToken)\\n  }\",\n  \"variables\": {\n    \"clerkToken\": \"YOUR_CLERK_TOKEN_HERE\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/graphql",
              "host": ["{{baseUrl}}"],
              "path": ["graphql"]
            }
          }
        }
      ]
    },
    {
      "name": "Web App Proxy Tests",
      "item": [
        {
          "name": "Get Apps via Web Proxy",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"query GetApps {\\n    apps {\\n      _id\\n      title\\n      slug\\n      shortDesc\\n      status\\n      visibility\\n      platforms\\n      languages\\n      tags\\n      viewCount\\n      likeCount\\n      createdAt\\n    }\\n  }\"\n}"
            },
            "url": {
              "raw": "{{webUrl}}/api/graphql",
              "host": ["{{webUrl}}"],
              "path": ["api", "graphql"]
            }
          }
        }
      ]
    },
    {
      "name": "Health Check",
      "item": [
        {
          "name": "API Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/health",
              "host": ["{{baseUrl}}"],
              "path": ["health"]
            }
          }
        }
      ]
    }
  ]
}
